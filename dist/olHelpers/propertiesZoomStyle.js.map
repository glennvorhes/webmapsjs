{"version":3,"file":"propertiesZoomStyle.js","sourceRoot":"C:/Users/glenn/PycharmProjects/webmapsjs/src/","sources":["olHelpers/propertiesZoomStyle.ts"],"names":[],"mappings":"AAAA;;GAEG;;;AAEH,2CAAsC;AACtC,+DAAiE;AAEjE,IAAM,EAAE,GAAG,iBAAO,CAAC,WAAW,CAAC,CAAC;AAGhC;;;;;;GAMG;AAEH;;;;GAIG;AACH,6BAA6B,SAAS;IAClC,EAAE,CAAC,CAAC,SAAS,IAAI,SAAS,CAAC,CAAA,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,UAAU,OAAmB,EAAE,UAAU;QAC5C,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,qBAAqB,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3F,CAAC,CAAC;AACN,CAAC;AAED,EAAE,CAAC,mBAAmB,GAAG,mBAAmB,CAAC;AAC7C,kBAAe,mBAAmB,CAAC","sourcesContent":["/**\r\n * Created by gavorhes on 12/14/2015.\r\n */\r\n\r\nimport provide from '../util/provide';\r\nimport * as zoomResolutionConvert from './zoomResolutionConvert';\r\nimport ol = require('custom-ol');\r\nconst nm = provide('olHelpers');\r\n\r\n\r\n/**\r\n * A style function based on properties and zoom level, wraps normal feature, resolution function\r\n * @callback propertiesZoomStyle\r\n * @param {object} properties the feature properties\r\n * @param {number} zoom level\r\n *\r\n */\r\n\r\n/**\r\n * wrapper to define a style function by properties and zoom level\r\n * @param {propertiesZoomStyle|*} styleFunc - style function\r\n * @returns {function|*} new function\r\n */\r\nfunction propertiesZoomStyle(styleFunc) {\r\n    if (styleFunc == undefined){\r\n        return undefined;\r\n    }\r\n\r\n    return function (feature: ol.Feature, resolution) {\r\n        styleFunc(feature.getProperties(), zoomResolutionConvert.resolutionToZoom(resolution));\r\n    };\r\n}\r\n\r\nnm.propertiesZoomStyle = propertiesZoomStyle;\r\nexport default propertiesZoomStyle;\r\n"]}
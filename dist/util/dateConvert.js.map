{"version":3,"file":"dateConvert.js","sourceRoot":"","sources":["../../src/util/dateConvert.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,qCAAgC;AAChC,IAAI,EAAE,GAAG,iBAAO,CAAC,kBAAkB,CAAC,CAAC;AAErC,SAAS,UAAU,CAAC,KAAa;IAC7B,IAAI,MAAM,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;IAC7B,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;KACzB;IAED,OAAO,MAAM,CAAC;AAClB,CAAC;AAED,EAAE,CAAC,UAAU,GAAG,UAAU,CAAC;AAE3B;;;;GAIG;AACH,SAAgB,oBAAoB,CAAC,GAAS;IAC1C,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3C,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACpC,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrC,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;IACvC,IAAI,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC;IAExC,OAAU,EAAE,SAAI,KAAK,SAAI,GAAG,SAAI,GAAG,SAAI,GAAG,SAAI,IAAM,CAAC;AACzD,CAAC;AATD,oDASC;AAED,EAAE,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;AAG/C;;;;GAIG;AACH,SAAgB,mBAAmB,CAAC,GAAS;IAEzC,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;IAC3B,IAAI,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3C,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACpC,IAAI,GAAG,GAAG,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IAErC,OAAO,KAAG,EAAE,GAAG,KAAK,GAAG,GAAG,SAAI,GAAG,SAAM,CAAC;AAC5C,CAAC;AARD,kDAQC;AAED,EAAE,CAAC,mBAAmB,GAAG,mBAAmB,CAAC","sourcesContent":["/**\r\n * Created by gavorhes on 11/4/2015.\r\n */\r\n\r\nimport provide from './provide';\r\nlet nm = provide('util.dateConvert');\r\n\r\nfunction leadingPad(inNum: number) {\r\n    let strNum = inNum.toFixed();\r\n    if (strNum.length < 2) {\r\n        strNum = '0' + strNum;\r\n    }\r\n\r\n    return strNum;\r\n}\r\n\r\nnm.leadingPad = leadingPad;\r\n\r\n/**\r\n * Given a date return a string in the format YYYY-mm-dd hh:MM:SS\r\n * @param {Date} dte to convert\r\n * @returns {string} the formatted date string\r\n */\r\nexport function dateToYyyyMmDdHhMmSs(dte: Date): string {\r\n    let yr = dte.getFullYear();\r\n    let month = leadingPad(dte.getMonth() + 1);\r\n    let day = leadingPad(dte.getDate());\r\n    let hrs = leadingPad(dte.getHours());\r\n    let mns = leadingPad(dte.getMinutes());\r\n    let secs = leadingPad(dte.getSeconds());\r\n\r\n    return `${yr}-${month}-${day} ${hrs}:${mns}:${secs}`;\r\n}\r\n\r\nnm.dateToYyyyMmDdHhMmSs = dateToYyyyMmDdHhMmSs;\r\n\r\n\r\n/**\r\n * Given a date return a string in the format YYYYmmdd_hh0000\r\n * @param {Date} dte the input date\r\n * @returns {string} the formatted date string\r\n */\r\nexport function dateToYyyyMmDdHh000(dte: Date): string {\r\n\r\n    let yr = dte.getFullYear();\r\n    let month = leadingPad(dte.getMonth() + 1);\r\n    let day = leadingPad(dte.getDate());\r\n    let hrs = leadingPad(dte.getHours());\r\n\r\n    return `${yr}${month}${day}_${hrs}0000`;\r\n}\r\n\r\nnm.dateToYyyyMmDdHh000 = dateToYyyyMmDdHh000;\r\n"]}
{"version":3,"file":"formatString.js","sourceRoot":"C:/Users/glenn/PycharmProjects/webmapsjs/src/","sources":["util/formatString.ts"],"names":[],"mappings":"AAAA;;GAEG;;;AAEH,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC9B;;;;;;;;;;;;;;OAcG;IACH,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG;QACzB,IAAI,IAAI,GAAG,SAAS,CAAC;QACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAChD,CAAC;QAED,6CAA6C;QAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC;YAC/B,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,KAAK,EAAE,MAAM;YACnD,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;QACrE,CAAC,CAAC,CAAC;IACP,CAAC,CAAC;AACN,CAAC;AAED,kBAAe,SAAS,CAAC","sourcesContent":["/**\r\n * Created by gavorhes on 10/30/2015.\r\n */\r\n\r\nif (!String.prototype['format']) {\r\n    /**\r\n     *  helper function for string replacement to keep code clean\r\n     * usage\r\n     * var aString = 'some{0}stuff{1}replaced';\r\n     * var c = 'cat';\r\n     * var b = 'bird';\r\n     * aString.format(c, b)  returns 'somecatstuffbirdreplaced'\r\n     * prettier than\r\n     * 'some' + c + 'stuff' + b + 'replaced'\r\n     * but same effect\r\n     * adapted to take a single array that is used for replacement by position ie\r\n     * var arrReplacements = [c, b];\r\n     * aString.format(arrReplacements)\r\n     * @returns {string} converted string\r\n     */\r\n    String.prototype['format'] = function () {\r\n        let args = arguments;\r\n        for (let i = 0; i < args.length; i++) {\r\n            args[i] = (args[i] !== null ? args[i] : '');\r\n        }\r\n\r\n        //if the first argument is an array, use that\r\n        if (args[0].constructor == Array) {\r\n            args = args[0];\r\n        }\r\n\r\n        return this.replace(/{(\\d+)}/g, function (match, number) {\r\n            return typeof args[number] != 'undefined' ? args[number] : match;\r\n        });\r\n    };\r\n}\r\n\r\nexport default undefined;\r\n"]}
{"version":3,"file":"reacttst_connect.js","sourceRoot":"","sources":["../../../src/_tests/demos/reacttst_connect.ts"],"names":[],"mappings":";;AAAA,qEAA4D;AAE5D,2DAAwD;AACxD,6DAA0D;AAC1D,4CAA8C;AAGjC,QAAA,iBAAiB,GAAG,uBAAO,CACpC,UAAC,KAAa;IACV,OAAO;QACH,KAAK,EAAE,uBAAuB;QAC9B,MAAM,EAAE,UAAC,CAAC;YACN,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC;QACD,GAAG,EAAE,KAAK,CAAC,OAAO;KACrB,CAAA;AACL,CAAC,EACD,UAAC,QAAQ;IACL,OAAO;QACH,MAAM,EAAE,UAAC,CAAC;YACN,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;QACjD,CAAC;KACJ,CAAA;AACL,CAAC,CACJ,CAAC,mBAAQ,CAAC,CAAC;AAGC,QAAA,kBAAkB,GAAG,uBAAO,CACrC,UAAC,KAAa;IACV,OAAO;QACH,QAAQ,EAAE,EAAE;QACZ,KAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,KAAK;QAC3B,GAAG,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG;QACvB,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG;QAC9B,MAAM,EAAE,IAAI;KACf,CAAA;AACL,CAAC,EACD,UAAC,QAAQ;IACL,OAAO;QACH,QAAQ,EAAE,UAAC,CAAO,EAAE,CAAO,EAAE,OAAe;YACxC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,CAAC,aAAa,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAChF,CAAC;KACJ,CAAA;AACL,CAAC,CACJ,CAAC,qBAAS,CAAC,CAAC","sourcesContent":["import {connect} from '../../reactComponents/reactAndRedux';\r\nimport {iState} from './reacttst_store';\r\nimport {DatePick} from '../../reactComponents/DatePick';\r\nimport {DateRange} from '../../reactComponents/DateRange';\r\nimport * as actions from './reacttst_actions';\r\n\r\n\r\nexport const DatePickConnected = connect(\r\n    (state: iState) => {\r\n        return {\r\n            label: 'Date Picker Connected',\r\n            change: (v) => {\r\n                console.log(v);\r\n            },\r\n            val: state.oneDate\r\n        }\r\n    },\r\n    (dispatch) => {\r\n        return {\r\n            change: (v) => {\r\n                dispatch({type: actions.SET_ONE_DATE, d: v});\r\n            }\r\n        }\r\n    }\r\n)(DatePick);\r\n\r\n\r\nexport const DateRangeConnected = connect(\r\n    (state: iState) => {\r\n        return {\r\n            maxRange: 10,\r\n            start: state.twoDates.start,\r\n            end: state.twoDates.end,\r\n            initialEnd: state.twoDates.end,\r\n            npmrds: true\r\n        }\r\n    },\r\n    (dispatch) => {\r\n        return {\r\n            callback: (s: Date, e: Date, version: number) => {\r\n                dispatch({type: actions.SET_TWO_DATES, start: s, end: e, version: version});\r\n            }\r\n        }\r\n    }\r\n)(DateRange);\r\n\r\n\r\n\r\n\r\n"]}